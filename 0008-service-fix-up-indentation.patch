From 8e4ea1d478f0841f59a7f6103a4201df631c1a09 Mon Sep 17 00:00:00 2001
From: Dan Winship <danw@gnome.org>
Date: Fri, 18 May 2012 09:24:24 -0400
Subject: [PATCH 08/20] service: fix up indentation

---
 src/nm-openconnect-service-openconnect-helper.c |   26 +++++++++++------------
 src/nm-openconnect-service.c                    |   26 +++++++++++------------
 2 files changed, 26 insertions(+), 26 deletions(-)

diff --git a/src/nm-openconnect-service-openconnect-helper.c b/src/nm-openconnect-service-openconnect-helper.c
index 01af370..7f2d01d 100644
--- a/src/nm-openconnect-service-openconnect-helper.c
+++ b/src/nm-openconnect-service-openconnect-helper.c
@@ -51,14 +51,14 @@ helper_failed (DBusGConnection *connection, const char *reason)
 	g_warning ("nm-nopenconnect-service-openconnect-helper did not receive a valid %s from openconnect", reason);
 
 	proxy = dbus_g_proxy_new_for_name (connection,
-								NM_DBUS_SERVICE_OPENCONNECT,
-								NM_VPN_DBUS_PLUGIN_PATH,
-								NM_VPN_DBUS_PLUGIN_INTERFACE);
+	                                   NM_DBUS_SERVICE_OPENCONNECT,
+	                                   NM_VPN_DBUS_PLUGIN_PATH,
+	                                   NM_VPN_DBUS_PLUGIN_INTERFACE);
 
 	dbus_g_proxy_call (proxy, "SetFailure", &err,
-				    G_TYPE_STRING, reason,
-				    G_TYPE_INVALID,
-				    G_TYPE_INVALID);
+	                   G_TYPE_STRING, reason,
+	                   G_TYPE_INVALID,
+	                   G_TYPE_INVALID);
 
 	if (err) {
 		g_warning ("Could not send failure information: %s", err->message);
@@ -77,15 +77,15 @@ send_ip4_config (DBusGConnection *connection, GHashTable *config)
 	GError *err = NULL;
 
 	proxy = dbus_g_proxy_new_for_name (connection,
-								NM_DBUS_SERVICE_OPENCONNECT,
-								NM_VPN_DBUS_PLUGIN_PATH,
-								NM_VPN_DBUS_PLUGIN_INTERFACE);
+	                                   NM_DBUS_SERVICE_OPENCONNECT,
+	                                   NM_VPN_DBUS_PLUGIN_PATH,
+	                                   NM_VPN_DBUS_PLUGIN_INTERFACE);
 
 	dbus_g_proxy_call (proxy, "SetIp4Config", &err,
-				    dbus_g_type_get_map ("GHashTable", G_TYPE_STRING, G_TYPE_VALUE),
-				    config,
-				    G_TYPE_INVALID,
-				    G_TYPE_INVALID);
+	                   dbus_g_type_get_map ("GHashTable", G_TYPE_STRING, G_TYPE_VALUE),
+	                   config,
+	                   G_TYPE_INVALID,
+	                   G_TYPE_INVALID);
 
 	if (err) {
 		g_warning ("Could not send failure information: %s", err->message);
diff --git a/src/nm-openconnect-service.c b/src/nm-openconnect-service.c
index bbf4193..90e6b92 100644
--- a/src/nm-openconnect-service.c
+++ b/src/nm-openconnect-service.c
@@ -292,7 +292,7 @@ static void openconnect_drop_child_privs(gpointer user_data)
 
 	if (tun_name) {
 		if (initgroups(NM_OPENCONNECT_USER, tun_group) ||
-			setgid(tun_group) || setuid(tun_owner)) {
+		    setgid(tun_group) || setuid(tun_owner)) {
 			g_warning ("Failed to drop privileges when spawning openconnect");
 			exit (1);
 		}
@@ -347,8 +347,8 @@ openconnect_watch_cb (GPid pid, gint status, gpointer user_data)
 
 static gint
 nm_openconnect_start_openconnect_binary (NMOPENCONNECTPlugin *plugin,
-										 NMSettingVPN *s_vpn,
-										 GError **error)
+                                         NMSettingVPN *s_vpn,
+                                         GError **error)
 {
 	NMOPENCONNECTPluginPrivate *priv = NM_OPENCONNECT_PLUGIN_GET_PRIVATE (plugin);
 	GPid	pid;
@@ -441,9 +441,9 @@ nm_openconnect_start_openconnect_binary (NMOPENCONNECTPlugin *plugin,
 	g_ptr_array_add (openconnect_argv, NULL);
 
 	if (!g_spawn_async_with_pipes (NULL, (char **) openconnect_argv->pdata, NULL,
-								   G_SPAWN_DO_NOT_REAP_CHILD,
-								   openconnect_drop_child_privs, priv->tun_name,
-								   &pid, &stdin_fd, NULL, NULL, error)) {
+	                               G_SPAWN_DO_NOT_REAP_CHILD,
+	                               openconnect_drop_child_privs, priv->tun_name,
+	                               &pid, &stdin_fd, NULL, NULL, error)) {
 		g_ptr_array_free (openconnect_argv, TRUE);
 		g_warning ("openconnect failed to start.  error: '%s'", (*error)->message);
 		return -1;
@@ -453,7 +453,7 @@ nm_openconnect_start_openconnect_binary (NMOPENCONNECTPlugin *plugin,
 	g_message ("openconnect started with pid %d", pid);
 
 	if (write(stdin_fd, props_cookie, strlen(props_cookie)) != strlen(props_cookie) ||
-		write(stdin_fd, "\n", 1) != 1) {
+	    write(stdin_fd, "\n", 1) != 1) {
 		g_warning ("openconnect didn't eat the cookie we fed it");
 		return -1;
 	}
@@ -504,7 +504,7 @@ real_need_secrets (NMVPNPlugin *plugin,
 
 	s_vpn = NM_SETTING_VPN (nm_connection_get_setting (connection, NM_TYPE_SETTING_VPN));
 	if (!s_vpn) {
-        g_set_error (error,
+		g_set_error (error,
 		             NM_VPN_PLUGIN_ERROR,
 		             NM_VPN_PLUGIN_ERROR_CONNECTION_INVALID,
 		             "%s",
@@ -543,7 +543,7 @@ ensure_killed (gpointer data)
 
 static gboolean
 real_disconnect (NMVPNPlugin   *plugin,
-			  GError       **err)
+                 GError       **err)
 {
 	NMOPENCONNECTPluginPrivate *priv = NM_OPENCONNECT_PLUGIN_GET_PRIVATE (plugin);
 
@@ -583,8 +583,8 @@ NMOPENCONNECTPlugin *
 nm_openconnect_plugin_new (void)
 {
 	return (NMOPENCONNECTPlugin *) g_object_new (NM_TYPE_OPENCONNECT_PLUGIN,
-								   NM_VPN_PLUGIN_DBUS_SERVICE_NAME, NM_DBUS_SERVICE_OPENCONNECT,
-								   NULL);
+	                                             NM_VPN_PLUGIN_DBUS_SERVICE_NAME, NM_DBUS_SERVICE_OPENCONNECT,
+	                                             NULL);
 }
 
 static void
@@ -610,8 +610,8 @@ int main (int argc, char *argv[])
 	main_loop = g_main_loop_new (NULL, FALSE);
 
 	g_signal_connect (plugin, "quit",
-				   G_CALLBACK (quit_mainloop),
-				   main_loop);
+	                  G_CALLBACK (quit_mainloop),
+	                  main_loop);
 
 	g_main_loop_run (main_loop);
 
-- 
1.7.10.2

